name: 'SrgCounterServiceGaction'
description: "Calls an API to retrieve a key's counter value"
inputs:
  keyName:
    description: 'Counter Key Name'
    required: true
  isNinjaApiService:
    description: 'is Ninja Api Service'
    required: false
    default: 'true'
  apiKey:
    description: 'API key for authentication'
    required: true
  apiDomain:
    description: 'API domain'
    required: false
outputs:
  gaction_output_counter_value:
    description: "The counter value from the API response"
    value: ${{ steps.step_call_api.outputs.step_output_counter_value }}
runs:
  using: "composite"
  steps:
    - name: '000 -> Setup jq'
      uses: dcarbone/install-jq-action@v2.0.2
      with:
        version: '1.7'
        force: 'false'
    - name: "echo basic inputs for debug"
      shell: bash
      run: |
        echo "inputs.keyName: ${{ inputs.keyName }}"
        echo "inputs.apiDomain: ${{ inputs.apiDomain }}"
    - id: step_call_api
      shell: bash
      env:
        isForNinjaApiService: ${{ inputs.isNinjaApiService }}
      run: |
        GITHUB_ACTION_PATH="${{ github.action_path }}"
        echo "GITHUB_ACTION_PATH --> $GITHUB_ACTION_PATH"
        if [ "$isForNinjaApiService" = "true" ]; then
          echo "isForNinjaApiService ----> $isForNinjaApiService"
          
          cout_api_result=$(bash "${GITHUB_ACTION_PATH}/run_counter_api_ninja" "${{ inputs.keyName }}" "${{ inputs.apiKey }}")
          echo "cout_api_result --> $cout_api_result"
          echo "step_output_counter_value=${cout_api_result}" >> $GITHUB_OUTPUT
        else
          echo "isForNinjaApiService ----> $isForNinjaApiService"
          cout_api_result=$(bash "${GITHUB_ACTION_PATH}/run_counter_api_host_service" "${{ inputs.keyName }}" "${{ inputs.apiKey }}" "${{ inputs.apiDomain }}")
          echo "cout_api_result --> $cout_api_result"
          echo "step_output_counter_value=${cout_api_result}" >> $GITHUB_OUTPUT
        fi

